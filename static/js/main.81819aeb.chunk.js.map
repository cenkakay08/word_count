{"version":3,"sources":["Components/Title.js","stringSplit.js","Components/GetScreenDimensions.js","Components/TableOfWords.js","Components/TextContent.js","Components/DropZone.js","App.js","reportWebVitals.js","index.js"],"names":["TitleText","styled","h1","WrapperTitle","section","Title","splitter","str","id","counts","keys","wordsLength","words","replace","split","i","length","word","toLowerCase","undefined","push","sort","a","b","countA","all","k","key","getWindowDimensions","window","width","innerWidth","height","innerHeight","Tabblediv","div","TableOfWords","wordTable","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","rowHeight","rowsCount","headerHeight","columnKey","header","align","cell","rowIndex","TextItselfdiv","TextInfodiv","TextContent","textItself","textInfo","Fragment","DropZone","setTextItself","setTextInfo","setWordTable","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onloadend","string","result","readAsText","useDropzone","getRootProps","getInputProps","DivInput","type","className","accept","Droptext","p","WrapperAll","WordCountApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.81819aeb.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = () => {\n  return (\n    <WrapperTitle>\n      <TitleText>Word Count!</TitleText>\n    </WrapperTitle>\n  );\n};\nconst TitleText = styled.h1`\n  font-size: 5em;\n  text-align: center;\n  color: #ffd369;\n  font-weight: bold;\n`;\nconst WrapperTitle = styled.section`\n  background: #008891;\n`;\nexport default Title;\n","function splitter(str, id) {\n  var counts = {};\n  var keys = [];\n  var wordsLength = 0;\n\n  const allwords = str.replace(/(\\n)/gm, \"\");\n  const words = allwords.split(/\\W+/);\n\n  //Check every word and their number\n  for (var i = 0; i < words.length; i++) {\n    var word = words[i].toLowerCase();\n    if (word.length > 1) {\n      if (counts[word] === undefined) {\n        counts[word] = 1;\n        keys.push(word);\n      } else {\n        counts[word] = counts[word] + 1;\n      }\n      wordsLength++;\n    }\n  }\n\n  //Sort keys\n  keys.sort(compare);\n\n  function compare(a, b) {\n    var countA = counts[a];\n    var countB = counts[b];\n    return countB - countA;\n  }\n  var all = [];\n\n  //Create whole string for words and counts\n  for (var k = 0; k < keys.length; k++) {\n    var key = keys[k];\n    all.push([key, counts[key]]);\n  }\n\n  if (id === \"info\") {\n    return (\n      \"Length of all words = \" +\n      wordsLength +\n      \"\\nLength of unique words = \" +\n      keys.length\n    );\n  } else {\n    return all;\n  }\n}\n\nexport default splitter;\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Table, Column, Cell } from \"fixed-data-table-2\";\nimport useWindowDimensions from \"./GetScreenDimensions\";\nconst TableOfWords = ({ wordTable }) => {\n  const { height, width } = useWindowDimensions();\n  return (\n    <Tabblediv>\n      <Table\n        rowHeight={(height / 100) * 4}\n        rowsCount={wordTable.length}\n        headerHeight={(height / 100) * 4.5}\n        width={(width / 100) * 18}\n        height={(height / 100) * 55}\n      >\n        <Column\n          columnKey=\"0\"\n          header={<Cell>Word</Cell>}\n          align=\"center\"\n          width={(width / 100) * 12}\n          cell={({ rowIndex, columnKey }) => {\n            return <Cell>{wordTable[rowIndex][columnKey]}</Cell>;\n          }}\n        />\n        <Column\n          columnKey=\"1\"\n          header={<Cell>Times</Cell>}\n          align=\"center\"\n          width={(width / 100) * 6}\n          cell={({ rowIndex, columnKey }) => {\n            return <Cell>{wordTable[rowIndex][columnKey]}</Cell>;\n          }}\n        />\n      </Table>\n    </Tabblediv>\n  );\n};\n\nconst Tabblediv = styled.div`\n  height: 55vh;\n  width: 18vw;\n  top: 42vh;\n  left: 40vw;\n  background-color: #fafafa;\n  position: absolute;\n  overflow: hidden;\n  border: 1px solid;\n  box-shadow: 5px 10px 8px 10px #888888;\n  font-size: 1.5vw;\n  font-weight: bold;\n`;\n\nexport default TableOfWords;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TextContent = ({ textItself, textInfo }) => {\n  return (\n    <React.Fragment>\n      <TextItselfdiv>\n        <pre>{textItself}</pre>\n      </TextItselfdiv>\n      <TextInfodiv>\n        <pre>{textInfo}</pre>\n      </TextInfodiv>\n    </React.Fragment>\n  );\n};\n\nconst TextItselfdiv = styled.div`\n  height: 55vh;\n  width: 33vw;\n  top: 42vh;\n  overflow: auto;\n  position: absolute;\n  font-weight: bold;\n  font-size: 1vw;\n  background-color: #fafafa;\n  font-family: Arial, sans-serif;\n  border: 1px solid;\n  display: inline;\n  left: 3vw;\n  box-shadow: 5px 10px 8px 10px #888888;\n`;\nconst TextInfodiv = styled.div`\n  height: 10vh;\n  width: 33vw;\n  top: 55vh;\n  overflow: auto;\n  margin: auto;\n  text-align: center;\n  font-size: 2vw;\n  font-weight: bold;\n  background-color: #fafafa;\n  position: absolute;\n  font-family: Arial, sans-serif;\n  border: 1px solid;\n  display: inline;\n  right: 3vw;\n  box-shadow: 5px 10px 8px 10px #888888;\n`;\n\nexport default TextContent;\n","import React from \"react\";\nimport splitter from \"../stringSplit\";\nimport styled from \"styled-components\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useState, useCallback } from \"react\";\nimport TableOfWords from \"./TableOfWords\";\nimport TextContent from \"./TextContent\";\n\nconst DropZone = () => {\n  const [textItself, setTextItself] = useState(\"\");\n  const [textInfo, setTextInfo] = useState(\"\");\n  const [wordTable, setWordTable] = useState([]);\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onloadend = () => {\n        // Do whatever you want with the file contents\n        const string = reader.result;\n        setTextItself(string);\n        console.log(string);\n        console.log(textItself);\n        var result = splitter(string);\n        setTextInfo(splitter(string, \"info\"));\n        console.log(result);\n        setWordTable(result);\n      };\n      reader.readAsText(file);\n    });\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n  return (\n    <React.Fragment>\n      <DivInput {...getRootProps()}>\n        <input\n          {...getInputProps()}\n          type=\"file\"\n          id=\"file\"\n          className=\"input-file\"\n          accept=\".txt\"\n        />\n        <Droptext>Drag-drop the file here, or click to select file!</Droptext>\n      </DivInput>\n      <TextContent textItself={textItself} textInfo={textInfo} />\n      <TableOfWords wordTable={wordTable} />\n    </React.Fragment>\n  );\n};\n\nconst Droptext = styled.p`\n  text-align: center;\n  color: #0f3057;\n  font-weight: bold;\n  font-size: 4vw;\n  width: 100%;\n  line-height: 20vh;\n`;\nconst DivInput = styled.div`\n  height: 20vh;\n  width: 90vw;\n  flex: 1;\n  align-items: center;\n  left: 4vw;\n  border-width: 10px;\n  border-radius: 20px;\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  position: relative;\n`;\nexport { DropZone };\n","import Title from \"./Components/Title\";\nimport { DropZone } from \"./Components/DropZone\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst WordCountApp = () => {\n  return (\n    <WrapperAll>\n      <React.Fragment>\n        <Title />\n        <DropZone />\n      </React.Fragment>\n    </WrapperAll>\n  );\n};\n\nconst WrapperAll = styled.section`\n  background: #e7e7de;\n  height: 100vh;\n  width: 100vw;\n  * {\n    margin: 0;\n    padding: 0;\n  }\n`;\nexport default WordCountApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"fixed-data-table-2/dist/fixed-data-table.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}